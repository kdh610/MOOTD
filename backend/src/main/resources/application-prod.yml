spring:
  data:
    mongodb:
      uri: mongodb://root:root@localhost:27018/mootd?authSource=admin
#      uri: mongodb://${DB_USERNAME}:${DB_PASSWORD}@${HOST}:27018/mootd?authSource=admin
    elasticsearch:
      repositories:
        enabled: true
      username: ${ES_USERNAME}
      password: ${ES_PASSWORD}
      uris: localhost:9200

  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 20MB

#카프카 설정 컨피그 파일로 대체
  kafka:
    bootstrap-servers: ${KAFKA_SERVER}  # Kafka 서버 주소
#    consumer:
#      auto-offset-reset: "earliest"       # 메시지를 처음부터 읽도록 설정
#      key-deserializer: "org.apache.kafka.common.serialization.StringDeserializer"
#      value-deserializer: "org.apache.kafka.common.serialization.JsonDeserializer"
#      properties.spring.kafka.consumer.trusted.packages: "com.bwd4.mootd.dto.internal"  # 패키지 신뢰 설정
#    producer:
#      key-serializer: "org.apache.kafka.common.serialization.StringSerializer"
#      value-serializer: "org.apache.kafka.common.serialization.JsonSerializer"

server:
  tomcat:
    connection-timeout: 20000 # 20초


cloud:
  aws:
    s3:
      bucket: ${S3_BUCKET}
    stack.auto: false
    region.static: ap-northeast-2
    credentials:
      accessKey: ${S3_ACCESSKEY}
      secretKey: ${S3_SECRETKEY}

springdoc:
  swagger-ui:
    path: swagger

ai:
  host: ${HOST}
  edge: ${EDGE_URL}

management:
  endpoints:
    web:
      exposure:
        include: prometheus, health, info
  metrics:
    tags:
      application: ${spring.application.name}

logging:
  level:
    org.springframework.data.mongodb.core.MongoTemplate: DEBUG
    org.mongodb.driver.protocol.command: DEBUG
